version: '3.8'
services:
  backend:
    build: ./backend
    env_file: ./backend/.env
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
  
  celery_worker:
    build: ./backend
    command: celery -A app.celery_app worker --loglevel=info
    env_file: ./backend/.env
    volumes:
      - ./backend:/app
    depends_on:
      - backend
      - redis
  
  celery_beat:
    build: ./backend
    command: celery -A app.celery_app beat --loglevel=info
    env_file: ./backend/.env
    volumes:
      - ./backend:/app
    depends_on:
      - backend
      - redis

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:8000
    depends_on:
      - backend

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: rp_user
      POSTGRES_PASSWORD: rp_pass
      POSTGRES_DB: rapidprobe
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rp_user -d rapidprobe"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
  redis_data:
